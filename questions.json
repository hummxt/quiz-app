[
  [
    {
      "id": "1",
      "question": "What can cause a React component to re-render?",
      "options": [
        "Functions inside the component",
        "CSS changes",
        "Changing the component name",
        "Props or state changes"
      ],
      "answer": "Props or state changes"
    },
    {
      "id": "2",
      "question": "What is the main limitation of APIs in React?",
      "options": [
        "Not fully replacing state management",
        "I don't know",
        "Inability to handle async data",
        "Excessive rendering issues"
      ],
      "answer": "Excessive rendering issues"
    },
    {
      "id": "3",
      "question": "How can the `useEffect` hook accidentally cause an infinite loop?",
      "options": [
        "Using a variable not in the dependency list",
        "Returning a function",
        "Not related to state changes",
        "Providing an empty array to run only once"
      ],
      "answer": "Using a variable not in the dependency list"
    },
    {
      "id": "4",
      "question": "What is the main advantage of the virtual DOM in React?",
      "options": [
        "Reducing excessive rendering",
        "Simplifying state management",
        "Automatically removing components",
        "Improving performance"
      ],
      "answer": "Improving performance"
    },
    {
      "id": "5",
      "question": "Why is the `key` attribute important in React?",
      "options": [
        "To modify style attributes",
        "To assign event handlers",
        "To change the component type",
        "To improve rendering performance"
      ],
      "answer": "To improve rendering performance"
    },
    {
      "id": "6",
      "question": "What is a 'closure' in JavaScript?",
      "options": [
        "Access to external variables by a function inside another function",
        "A concept used to create Promise objects",
        "A method to handle asynchronous operations",
        "A method for DOM manipulation"
      ],
      "answer": "Access to external variables by a function inside another function"
    },
    {
      "id": "7",
      "question": "What is the purpose of `React.StrictMode`?",
      "options": [
        "To test new features",
        "To automate performance analysis",
        "To allow React app compilation",
        "To detect potential issues in the app"
      ],
      "answer": "To detect potential issues in the app"
    },
    {
      "id": "8",
      "question": "What does the `useRef` React hook do?",
      "options": [
        "Simplifies state management",
        "Allows direct reference to a DOM element or a variable",
        "Loads async data",
        "Used to re-render the component"
      ],
      "answer": "Allows direct reference to a DOM element or a variable"
    },
    {
      "id": "9",
      "question": "What are fragments used for in React?",
      "options": [
        "To simplify state management",
        "To create containers not added to the DOM",
        "To hide a DOM element",
        "To improve component performance"
      ],
      "answer": "To create containers not added to the DOM"
    },
    {
      "id": "10",
      "question": "How are variables declared in JavaScript?",
      "options": [
        "let, def, var",
        "var, let, const",
        "int, float, string",
        "declare, var, set"
      ],
      "answer": "var, let, const"
    },
    {
      "id": "11",
      "question": "Which operators are used for comparison in JavaScript?",
      "options": [
        "==, ===, !==, <, >",
        "=, ==, ||, &&",
        "==, !=, &, |",
        "===, >>, <<"
      ],
      "answer": "==, ===, !==, <, >"
    },
    {
      "id": "12",
      "question": "What are the data types in JavaScript?",
      "options": [
        "String, Boolean, Object, Undefined",
        "Object, Array, Null, String, Set",
        "Date, String, Boolean, Class",
        "Integer, Float, Object, List"
      ],
      "answer": "String, Boolean, Object, Undefined"
    },
    {
      "id": "13",
      "question": "How is an array created in JavaScript?",
      "options": [
        "let arr = {1, 2, 3}",
        "let arr = (1, 2, 3)",
        "let arr = [1, 2, 3]",
        "let arr = array(1, 2, 3)"
      ],
      "answer": "let arr = [1, 2, 3]"
    },
    {
      "id": "14",
      "question": "How is routing performed in React Router?",
      "options": [
        "With <Route> and <Link> components",
        "With <Route> and <Redirect> components",
        "With <Router> and <Navigate> components",
        "With only the <Route> component"
      ],
      "answer": "With <Route> and <Link> components"
    },
    {
      "id": "15",
      "question": "What does the `useState` hook do in React?",
      "options": [
        "Creates and manages state in a functional component",
        "Renders a component",
        "Waits for state changes",
        "Calls a function inside the component"
      ],
      "answer": "Creates and manages state in a functional component"
    },
    {
      "id": "16",
      "question": "What is the `className` attribute used for in React?",
      "options": [
        "To apply CSS only",
        "To define CSS classes",
        "To change the component name",
        "To set the id of a DOM element"
      ],
      "answer": "To define CSS classes"
    },
    {
      "id": "17",
      "question": "Can the value of a `const` variable in JavaScript be changed?",
      "options": [
        "Yes, but only for objects",
        "No, it cannot be changed",
        "Yes, at any time",
        "Yes, but only once"
      ],
      "answer": "No, it cannot be changed"
    },
    {
      "id": "18",
      "question": "What is the `typeof` operator used for in JavaScript?",
      "options": [
        "Compares the type of a variable",
        "Just for fun",
        "Gives information about the type of a variable",
        "Converts a variable to a number"
      ],
      "answer": "Gives information about the type of a variable"
    },
    {
      "id": "19",
      "question": "What does `NaN` represent in JavaScript?",
      "options": [
        "An undefined value",
        "A non-numeric value",
        "The opposite of a number",
        "The type of a variable"
      ],
      "answer": "A non-numeric value"
    },
    {
      "id": "20",
      "question": "What is the difference between `null` and `undefined` in JavaScript?",
      "options": [
        "`null` is empty, while `undefined` is a number",
        "`null` is equivalent to an object, while `undefined` is a function type",
        "`null` indicates no value, while `undefined` indicates a variable is not defined",
        "`null` is a function, while `undefined` is an array"
      ],
      "answer": "`null` indicates no value, while `undefined` indicates a variable is not defined"
    },
    {
      "id": "21",
      "question": "What does the `JSON.stringify()` method do in JavaScript?",
      "options": [
        "Converts a JSON object to a JavaScript object",
        "Converts a JSON object to string format",
        "Converts a string to JSON format",
        "Parses a JSON object"
      ],
      "answer": "Converts a JSON object to string format"
    },
    {
      "id": "22",
      "question": "How is data exchanged between components in React?",
      "options": [
        "With props",
        "With state",
        "With refs",
        "With the Context API"
      ],
      "answer": "With props"
    },
    {
      "id": "23",
      "question": "What is state used for in React?",
      "options": [
        "To store a component's internal data",
        "To exchange state between components",
        "To calculate rendering results",
        "To re-render a component"
      ],
      "answer": "To store a component's internal data"
    },
    {
      "id": "24",
      "question": "What is the `setState()` method used for in React?",
      "options": [
        "To update the state value",
        "To re-render a component",
        "To read state data",
        "To hide a component"
      ],
      "answer": "To update the state value"
    },
    {
      "id": "25",
      "question": "What is a Higher-Order Component (HOC) in React?",
      "options": [
        "To define a new component",
        "To modify props",
        "To wrap a component with another component",
        "To store state values"
      ],
      "answer": "To wrap a component with another component"
    },
    {
      "id": "26",
      "question": "What do `async` and `await` do in JavaScript?",
      "options": [
        "Create and wait for asynchronous functions",
        "Run code blocks in parallel",
        "Execute operations synchronously",
        "Retrieve data immediately"
      ],
      "answer": "Create and wait for asynchronous functions"
    },
    {
      "id": "27",
      "question": "What is the `fetch()` method used for in JavaScript?",
      "options": [
        "To retrieve data from local storage",
        "To handle asynchronous operations",
        "To send data to a server",
        "To parse data"
      ],
      "answer": "To handle asynchronous operations"
    },
    {
      "id": "28",
      "question": "What is the `useEffect` hook used for in React?",
      "options": [
        "To render a component",
        "To manage async operations",
        "To track state changes",
        "To manipulate the DOM"
      ],
      "answer": "To manage async operations"
    },
    {
      "id": "29",
      "question": "What does `this` represent in JavaScript?",
      "options": [
        "The context of the current function",
        "The current object itself",
        "Only a global variable",
        "The function prototype"
      ],
      "answer": "The current object itself"
    },
    {
      "id": "30",
      "question": "What does the `Array.map()` method do in JavaScript?",
      "options": [
        "Modifies each element in an array",
        "Sorts an array",
        "Filters elements in an array",
        "Iterates over array elements"
      ],
      "answer": "Modifies each element in an array"
    }
  ]
]